package de.schuette.cobra2D.ressource;

import java.awt.image.BufferedImage;
import java.awt.image.VolatileImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Base64;

import javax.imageio.ImageIO;

import de.schuette.cobra2D.rendering.RenderToolkit;

public class NoTexture {
	/**
	 * Amount of bytes that can be maximal read in one step.
	 */
	private static final int BUFFER_SIZE = 2048;

	public static void main(String... args) throws Exception {
		String filename = args[0];

		if (filename == null || filename.trim().isEmpty()) {
			System.out.println("Please start this application with a filename of a picture.");
			System.exit(1);
		}

		FileInputStream in = new FileInputStream(new File(filename));
		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		boolean run = true;
		while (run) {
			byte[] data = new byte[BUFFER_SIZE];
			int readAmount = in.read(data, 0, data.length);
			if (readAmount == -1) {
				run = false;
				continue;
			}
			try {
				bos.write(data, 0, readAmount);
			} catch (Exception e) {
				throw new Exception("Error occurred in reader callback.", e);
			}
		}
		try {
			in.close();
		} catch (Exception e) {
			// Nothing to do.
		}

		byte[] bytes = bos.toByteArray();
		String base64Binary = Base64.getEncoder().encodeToString(bytes);

		System.out.println(base64Binary);

	}

	public static int getNoTextureWidth() {
		return 400;
	}

	public static int getNoTextureHeight() {
		return 400;
	}

	public static VolatileImage getNoTextureImage() {
		createVolatileImageOnce();
		return NO_IMAGE_TEXTURE;
	}

	private static void createVolatileImageOnce() {
		if (NO_IMAGE_TEXTURE == null) {
			byte[] base64 = Base64.getDecoder().decode(NO_IMAGE_BASE64);
			ByteArrayInputStream in = new ByteArrayInputStream(base64);
			try {
				BufferedImage read = ImageIO.read(in);
				VolatileImage copyImage = RenderToolkit.copyImage(read);
				NO_IMAGE_TEXTURE = copyImage;
			} catch (IOException e) {
				// Will never happen
			}
		}
	}

	public static VolatileImage NO_IMAGE_TEXTURE;
	public static final String NO_IMAGE_BASE64 = "";
}
